
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND AT CARDINALITY CLASS COLON COMMA DATA_TYPE DISJOINTCLASSES EQ EQUIVALENTO EXACTLY GT HAS ID INDIVIDUALS IS LBRACE LBRACKET LPAREN LT MAX MIN NOT OF ONLY OR PROPERTY RBRACE RBRACKET RESERVED RPAREN SOME SUBCLASSOF THAT VALUE\n    ontologia : descricao_classes descricao_individuals\n    \n    descricao_classes : CLASS COLON ID subclasso_classes propriedades descricao_classes\n                      | CLASS COLON ID subclasso_classes descricao_classes\n                      | CLASS COLON ID propriedades descricao_classes\n                      | CLASS COLON ID\n    \n    subclasso_classes : SUBCLASSOF COLON expressao_classes propriedades\n                      | SUBCLASSOF COLON expressao_classes\n                      | empty\n    \n    propriedades : PROPERTY propriedades\n                 | PROPERTY\n                 | empty\n    \n    descricao_individuals : INDIVIDUALS COLON ID COMMA ID descricao_individuals\n                          | INDIVIDUALS COLON ID\n                          | empty\n    \n    expressao_classes : ID\n                      | ID AND LPAREN expressao_classes COMMA expressao_classes RPAREN\n                      | ID AND LPAREN expressao_classes COMMA ID SOME ID RPAREN\n                      | ID AND LPAREN ID SOME ID RPAREN\n                      | ID AND LPAREN ID COMMA ID SOME ID RPAREN\n    \n    empty :\n    '
    
_lr_action_items = {'CLASS':([0,9,11,12,14,15,17,19,22,25,26,28,40,43,46,47,],[3,-20,3,3,-8,-10,3,-11,-9,-7,-15,-6,-18,-16,-19,-17,]),'$end':([1,2,4,6,9,10,18,20,23,24,27,],[0,-20,-1,-14,-5,-13,-3,-4,-20,-2,-12,]),'INDIVIDUALS':([2,9,18,20,23,24,],[5,-5,-3,-4,5,-2,]),'COLON':([3,5,13,],[7,8,21,]),'ID':([7,8,16,21,30,33,34,35,41,42,],[9,10,23,26,31,36,37,38,44,45,]),'SUBCLASSOF':([9,],[13,]),'PROPERTY':([9,11,14,15,19,22,25,26,28,40,43,46,47,],[15,15,-8,15,-11,-9,15,-15,-6,-18,-16,-19,-17,]),'COMMA':([10,31,32,40,43,46,47,],[16,34,35,-18,-16,-19,-17,]),'AND':([26,31,38,],[29,29,29,]),'LPAREN':([29,],[30,]),'SOME':([31,37,38,],[33,41,42,]),'RPAREN':([36,38,39,40,43,44,45,46,47,],[40,-15,43,-18,-16,46,47,-19,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ontologia':([0,],[1,]),'descricao_classes':([0,11,12,17,],[2,18,20,24,]),'descricao_individuals':([2,23,],[4,27,]),'empty':([2,9,11,15,23,25,],[6,14,19,19,6,19,]),'subclasso_classes':([9,],[11,]),'propriedades':([9,11,15,25,],[12,17,22,28,]),'expressao_classes':([21,30,35,],[25,32,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ontologia","S'",1,None,None,None),
  ('ontologia -> descricao_classes descricao_individuals','ontologia',2,'p_ontologia','app.py',156),
  ('descricao_classes -> CLASS COLON ID subclasso_classes propriedades descricao_classes','descricao_classes',6,'p_descricao_classes','app.py',162),
  ('descricao_classes -> CLASS COLON ID subclasso_classes descricao_classes','descricao_classes',5,'p_descricao_classes','app.py',163),
  ('descricao_classes -> CLASS COLON ID propriedades descricao_classes','descricao_classes',5,'p_descricao_classes','app.py',164),
  ('descricao_classes -> CLASS COLON ID','descricao_classes',3,'p_descricao_classes','app.py',165),
  ('subclasso_classes -> SUBCLASSOF COLON expressao_classes propriedades','subclasso_classes',4,'p_subclasso_classes','app.py',175),
  ('subclasso_classes -> SUBCLASSOF COLON expressao_classes','subclasso_classes',3,'p_subclasso_classes','app.py',176),
  ('subclasso_classes -> empty','subclasso_classes',1,'p_subclasso_classes','app.py',177),
  ('propriedades -> PROPERTY propriedades','propriedades',2,'p_propriedades','app.py',185),
  ('propriedades -> PROPERTY','propriedades',1,'p_propriedades','app.py',186),
  ('propriedades -> empty','propriedades',1,'p_propriedades','app.py',187),
  ('descricao_individuals -> INDIVIDUALS COLON ID COMMA ID descricao_individuals','descricao_individuals',6,'p_descricao_individuals','app.py',202),
  ('descricao_individuals -> INDIVIDUALS COLON ID','descricao_individuals',3,'p_descricao_individuals','app.py',203),
  ('descricao_individuals -> empty','descricao_individuals',1,'p_descricao_individuals','app.py',204),
  ('expressao_classes -> ID','expressao_classes',1,'p_expressao_classes','app.py',210),
  ('expressao_classes -> ID AND LPAREN expressao_classes COMMA expressao_classes RPAREN','expressao_classes',7,'p_expressao_classes','app.py',211),
  ('expressao_classes -> ID AND LPAREN expressao_classes COMMA ID SOME ID RPAREN','expressao_classes',9,'p_expressao_classes','app.py',212),
  ('expressao_classes -> ID AND LPAREN ID SOME ID RPAREN','expressao_classes',7,'p_expressao_classes','app.py',213),
  ('expressao_classes -> ID AND LPAREN ID COMMA ID SOME ID RPAREN','expressao_classes',9,'p_expressao_classes','app.py',214),
  ('empty -> <empty>','empty',0,'p_empty','app.py',226),
]
